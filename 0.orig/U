// -*- C++ -*-
// File generated by PyFoam - sorry for the ugliness

FoamFile
{
 version 2.0;
 format ascii; 	
 class volVectorField; 	
 location "0"; 	
 object U; 	
}

dimensions [ 0 1 -1 0 0 0 0 ];

internalField uniform (0 0 0); 	

boundaryField
{

	amont_bas
	{ 
    		type 		outletInlet; //uses zeroGradient if velocity vector is directed into domain, but (0 0 0) if directed out. outletInlet is necessary to stop flow from unaturally leaving this boundary
    		outletValue 	uniform (0 0 0);
    		value 		uniform (0 0 0);
	}

	amont_haut
	{ 
    		type 		inletOutlet; //zeroGradient if velocity vector is directed out of domain, (0 0 0) if directed in. This might need to be modified, zeroGradient?
    		inletValue 	uniform (0 0 0);
    		value 		uniform (0 0 0);
	}

	aval_bas
	{ 
    		type 		zeroGradient; //allows water to both enter and leave domain across patch
	}

  
	aval_haut
	{
    		type 		inletOutlet; //see amont_haut
    		inletValue 	uniform (0 0 0);
    		value 		uniform (0 0 0);
	}

  	haut
  	{
        	type            pressureInletOutletVelocity; //not sure if this is the right one for this boundary
        	value           uniform (0 0 0);
  	}
  
  	"wall_.*"
  	{
        	type            fixedValue;
        	value           uniform (0 0 0);
  	}
}
// ************************************************************************* //
